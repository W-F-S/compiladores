
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTleftEQNEQleftLTLEGTGEleftPLUSMINUSleftTIMESDIVIDEMODULOAND ASSIGN COMMA DIVIDE ELSE EQ FALSE FOR FUNCTION GE GT ID IF INPUT LBRACE LE LPAREN LT MINUS MODULO NEQ NOT NUMBER OR PLUS PRINT RBRACE RETURN RPAREN SEMICOLON STRING TIMES TRUE WHILEprogram : statementsstatements : statements statement\n| statementstatement : expression SEMICOLON\n| assignment SEMICOLON\n| conditional\n| loop\n| function_declaration\n| return_statement SEMICOLON\n| print_statement SEMICOLON\n| input_statement SEMICOLON\n| blockexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expression\n| expression MODULO expression\n| expression EQ expression\n| expression NEQ expression\n| expression LT expression\n| expression LE expression\n| expression GT expression\n| expression GE expression\n| expression AND expression\n| expression OR expression\n| NOT expression\n| LPAREN expression RPAREN\n| valueconditional : IF LPAREN expression RPAREN statement\n| IF LPAREN expression RPAREN statement ELSE statementreturn_statement : RETURN expression\n| RETURNprint_statement : PRINT LPAREN expression RPARENinput_statement : INPUT LPAREN STRING RPAREN\n| INPUT LPAREN RPARENwhile_statement : WHILE LPAREN expression RPAREN statementvalue : NUMBER\n| STRING\n| ID\n| boolean\n| function_callboolean : TRUE\n| FALSEarg_list : arg_list COMMA expression\n| expression\n| emptyempty :assignment : ID ASSIGN expressionloop : WHILE LPAREN expression RPAREN statement\n| FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN statementfunction_declaration : FUNCTION ID LPAREN params RPAREN blockparams : param_list\n| emptyparam_list : param_list COMMA ID\n| IDfunction_call : ID LPAREN arg_list RPARENblock : LBRACE statements RBRACE'
    
_lr_action_items = {'NOT':([0,2,3,6,7,8,12,13,14,21,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,60,62,89,91,92,93,94,102,103,107,109,111,113,114,],[13,13,-3,-6,-7,-8,-12,13,13,13,13,-2,-4,13,13,13,13,13,13,13,13,13,13,13,13,13,-5,-9,-10,-11,13,13,13,13,13,13,-57,13,13,13,13,-29,-49,13,-51,-30,13,-50,]),'LPAREN':([0,2,3,6,7,8,12,13,14,16,17,18,19,21,22,23,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,54,55,56,58,60,62,89,91,92,93,94,102,103,107,109,111,113,114,],[14,14,-3,-6,-7,-8,-12,14,14,54,55,56,57,14,60,61,14,-2,-4,14,14,14,14,14,14,14,14,14,14,14,14,14,-5,-9,-10,-11,54,14,14,14,14,85,14,14,-57,14,14,14,14,-29,-49,14,-51,-30,14,-50,]),'ID':([0,2,3,6,7,8,12,13,14,20,21,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,57,60,62,85,89,91,92,93,94,102,103,106,107,108,109,111,113,114,],[16,16,-3,-6,-7,-8,-12,51,51,58,51,16,-2,-4,51,51,51,51,51,51,51,51,51,51,51,51,51,-5,-9,-10,-11,51,51,51,51,84,51,16,95,-57,51,16,16,51,-29,-49,110,16,84,-51,-30,16,-50,]),'IF':([0,2,3,6,7,8,12,25,31,32,46,47,48,49,62,89,92,93,102,103,107,109,111,113,114,],[17,17,-3,-6,-7,-8,-12,17,-2,-4,-5,-9,-10,-11,17,-57,17,17,-29,-49,17,-51,-30,17,-50,]),'WHILE':([0,2,3,6,7,8,12,25,31,32,46,47,48,49,62,89,92,93,102,103,107,109,111,113,114,],[18,18,-3,-6,-7,-8,-12,18,-2,-4,-5,-9,-10,-11,18,-57,18,18,-29,-49,18,-51,-30,18,-50,]),'FOR':([0,2,3,6,7,8,12,25,31,32,46,47,48,49,62,89,92,93,102,103,107,109,111,113,114,],[19,19,-3,-6,-7,-8,-12,19,-2,-4,-5,-9,-10,-11,19,-57,19,19,-29,-49,19,-51,-30,19,-50,]),'FUNCTION':([0,2,3,6,7,8,12,25,31,32,46,47,48,49,62,89,92,93,102,103,107,109,111,113,114,],[20,20,-3,-6,-7,-8,-12,20,-2,-4,-5,-9,-10,-11,20,-57,20,20,-29,-49,20,-51,-30,20,-50,]),'RETURN':([0,2,3,6,7,8,12,25,31,32,46,47,48,49,62,89,92,93,102,103,107,109,111,113,114,],[21,21,-3,-6,-7,-8,-12,21,-2,-4,-5,-9,-10,-11,21,-57,21,21,-29,-49,21,-51,-30,21,-50,]),'PRINT':([0,2,3,6,7,8,12,25,31,32,46,47,48,49,62,89,92,93,102,103,107,109,111,113,114,],[22,22,-3,-6,-7,-8,-12,22,-2,-4,-5,-9,-10,-11,22,-57,22,22,-29,-49,22,-51,-30,22,-50,]),'INPUT':([0,2,3,6,7,8,12,25,31,32,46,47,48,49,62,89,92,93,102,103,107,109,111,113,114,],[23,23,-3,-6,-7,-8,-12,23,-2,-4,-5,-9,-10,-11,23,-57,23,23,-29,-49,23,-51,-30,23,-50,]),'LBRACE':([0,2,3,6,7,8,12,25,31,32,46,47,48,49,62,89,92,93,102,103,105,107,109,111,113,114,],[25,25,-3,-6,-7,-8,-12,25,-2,-4,-5,-9,-10,-11,25,-57,25,25,-29,-49,25,25,-51,-30,25,-50,]),'NUMBER':([0,2,3,6,7,8,12,13,14,21,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,60,62,89,91,92,93,94,102,103,107,109,111,113,114,],[26,26,-3,-6,-7,-8,-12,26,26,26,26,-2,-4,26,26,26,26,26,26,26,26,26,26,26,26,26,-5,-9,-10,-11,26,26,26,26,26,26,-57,26,26,26,26,-29,-49,26,-51,-30,26,-50,]),'STRING':([0,2,3,6,7,8,12,13,14,21,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,60,61,62,89,91,92,93,94,102,103,107,109,111,113,114,],[24,24,-3,-6,-7,-8,-12,24,24,24,24,-2,-4,24,24,24,24,24,24,24,24,24,24,24,24,24,-5,-9,-10,-11,24,24,24,24,24,87,24,-57,24,24,24,24,-29,-49,24,-51,-30,24,-50,]),'TRUE':([0,2,3,6,7,8,12,13,14,21,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,60,62,89,91,92,93,94,102,103,107,109,111,113,114,],[29,29,-3,-6,-7,-8,-12,29,29,29,29,-2,-4,29,29,29,29,29,29,29,29,29,29,29,29,29,-5,-9,-10,-11,29,29,29,29,29,29,-57,29,29,29,29,-29,-49,29,-51,-30,29,-50,]),'FALSE':([0,2,3,6,7,8,12,13,14,21,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,60,62,89,91,92,93,94,102,103,107,109,111,113,114,],[30,30,-3,-6,-7,-8,-12,30,30,30,30,-2,-4,30,30,30,30,30,30,30,30,30,30,30,30,30,-5,-9,-10,-11,30,30,30,30,30,30,-57,30,30,30,30,-29,-49,30,-51,-30,30,-50,]),'$end':([1,2,3,6,7,8,12,31,32,46,47,48,49,89,102,103,109,111,114,],[0,-1,-3,-6,-7,-8,-12,-2,-4,-5,-9,-10,-11,-57,-29,-49,-51,-30,-50,]),'RBRACE':([3,6,7,8,12,31,32,46,47,48,49,62,89,102,103,109,111,114,],[-3,-6,-7,-8,-12,-2,-4,-5,-9,-10,-11,89,-57,-29,-49,-51,-30,-50,]),'SEMICOLON':([4,5,9,10,11,15,16,21,24,26,27,28,29,30,50,51,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,83,88,90,99,100,104,],[32,46,47,48,49,-28,-39,-32,-38,-37,-40,-41,-42,-43,-26,-39,-31,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-27,-48,94,-35,-56,-33,-34,108,]),'PLUS':([4,15,16,24,26,27,28,29,30,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,86,90,101,104,],[33,-28,-39,-38,-37,-40,-41,-42,-43,33,-39,33,33,-13,-14,-15,-16,-17,33,33,33,33,33,33,33,33,-27,33,33,33,33,33,-56,33,33,]),'MINUS':([4,15,16,24,26,27,28,29,30,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,86,90,101,104,],[34,-28,-39,-38,-37,-40,-41,-42,-43,34,-39,34,34,-13,-14,-15,-16,-17,34,34,34,34,34,34,34,34,-27,34,34,34,34,34,-56,34,34,]),'TIMES':([4,15,16,24,26,27,28,29,30,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,86,90,101,104,],[35,-28,-39,-38,-37,-40,-41,-42,-43,35,-39,35,35,35,35,-15,-16,-17,35,35,35,35,35,35,35,35,-27,35,35,35,35,35,-56,35,35,]),'DIVIDE':([4,15,16,24,26,27,28,29,30,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,86,90,101,104,],[36,-28,-39,-38,-37,-40,-41,-42,-43,36,-39,36,36,36,36,-15,-16,-17,36,36,36,36,36,36,36,36,-27,36,36,36,36,36,-56,36,36,]),'MODULO':([4,15,16,24,26,27,28,29,30,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,86,90,101,104,],[37,-28,-39,-38,-37,-40,-41,-42,-43,37,-39,37,37,37,37,-15,-16,-17,37,37,37,37,37,37,37,37,-27,37,37,37,37,37,-56,37,37,]),'EQ':([4,15,16,24,26,27,28,29,30,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,86,90,101,104,],[38,-28,-39,-38,-37,-40,-41,-42,-43,38,-39,38,38,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,38,38,-27,38,38,38,38,38,-56,38,38,]),'NEQ':([4,15,16,24,26,27,28,29,30,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,86,90,101,104,],[39,-28,-39,-38,-37,-40,-41,-42,-43,39,-39,39,39,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,39,39,-27,39,39,39,39,39,-56,39,39,]),'LT':([4,15,16,24,26,27,28,29,30,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,86,90,101,104,],[40,-28,-39,-38,-37,-40,-41,-42,-43,40,-39,40,40,-13,-14,-15,-16,-17,40,40,-20,-21,-22,-23,40,40,-27,40,40,40,40,40,-56,40,40,]),'LE':([4,15,16,24,26,27,28,29,30,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,86,90,101,104,],[41,-28,-39,-38,-37,-40,-41,-42,-43,41,-39,41,41,-13,-14,-15,-16,-17,41,41,-20,-21,-22,-23,41,41,-27,41,41,41,41,41,-56,41,41,]),'GT':([4,15,16,24,26,27,28,29,30,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,86,90,101,104,],[42,-28,-39,-38,-37,-40,-41,-42,-43,42,-39,42,42,-13,-14,-15,-16,-17,42,42,-20,-21,-22,-23,42,42,-27,42,42,42,42,42,-56,42,42,]),'GE':([4,15,16,24,26,27,28,29,30,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,86,90,101,104,],[43,-28,-39,-38,-37,-40,-41,-42,-43,43,-39,43,43,-13,-14,-15,-16,-17,43,43,-20,-21,-22,-23,43,43,-27,43,43,43,43,43,-56,43,43,]),'AND':([4,15,16,24,26,27,28,29,30,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,86,90,101,104,],[44,-28,-39,-38,-37,-40,-41,-42,-43,-26,-39,44,44,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,44,-27,44,44,44,44,44,-56,44,44,]),'OR':([4,15,16,24,26,27,28,29,30,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,86,90,101,104,],[45,-28,-39,-38,-37,-40,-41,-42,-43,-26,-39,45,45,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-27,45,45,45,45,45,-56,45,45,]),'ELSE':([6,7,8,12,32,46,47,48,49,89,102,103,109,111,114,],[-6,-7,-8,-12,-4,-5,-9,-10,-11,-57,107,-49,-51,-30,-50,]),'RPAREN':([15,24,26,27,28,29,30,50,51,52,54,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,86,87,90,95,96,97,98,101,110,112,],[-28,-38,-37,-40,-41,-42,-43,-26,-39,76,-47,88,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-27,-48,90,-45,-46,92,93,-47,99,100,-56,-55,105,-52,-53,-44,-54,113,]),'COMMA':([15,24,26,27,28,29,30,50,51,54,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,90,95,97,101,110,],[-28,-38,-37,-40,-41,-42,-43,-26,-39,-47,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-27,91,-45,-46,-56,-55,106,-44,-54,]),'ASSIGN':([16,84,],[53,53,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,25,],[2,62,]),'statement':([0,2,25,62,92,93,107,113,],[3,31,3,31,102,103,111,114,]),'expression':([0,2,13,14,21,25,33,34,35,36,37,38,39,40,41,42,43,44,45,53,54,55,56,60,62,91,92,93,94,107,113,],[4,4,50,52,59,4,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,81,82,86,4,101,4,4,104,4,4,]),'assignment':([0,2,25,57,62,92,93,107,108,113,],[5,5,5,83,5,5,5,5,112,5,]),'conditional':([0,2,25,62,92,93,107,113,],[6,6,6,6,6,6,6,6,]),'loop':([0,2,25,62,92,93,107,113,],[7,7,7,7,7,7,7,7,]),'function_declaration':([0,2,25,62,92,93,107,113,],[8,8,8,8,8,8,8,8,]),'return_statement':([0,2,25,62,92,93,107,113,],[9,9,9,9,9,9,9,9,]),'print_statement':([0,2,25,62,92,93,107,113,],[10,10,10,10,10,10,10,10,]),'input_statement':([0,2,25,62,92,93,107,113,],[11,11,11,11,11,11,11,11,]),'block':([0,2,25,62,92,93,105,107,113,],[12,12,12,12,12,12,109,12,12,]),'value':([0,2,13,14,21,25,33,34,35,36,37,38,39,40,41,42,43,44,45,53,54,55,56,60,62,91,92,93,94,107,113,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'boolean':([0,2,13,14,21,25,33,34,35,36,37,38,39,40,41,42,43,44,45,53,54,55,56,60,62,91,92,93,94,107,113,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'function_call':([0,2,13,14,21,25,33,34,35,36,37,38,39,40,41,42,43,44,45,53,54,55,56,60,62,91,92,93,94,107,113,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'arg_list':([54,],[78,]),'empty':([54,85,],[80,98,]),'params':([85,],[96,]),'param_list':([85,],[97,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',15),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',19),
  ('statements -> statement','statements',1,'p_statements','parser.py',20),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','parser.py',27),
  ('statement -> assignment SEMICOLON','statement',2,'p_statement','parser.py',28),
  ('statement -> conditional','statement',1,'p_statement','parser.py',29),
  ('statement -> loop','statement',1,'p_statement','parser.py',30),
  ('statement -> function_declaration','statement',1,'p_statement','parser.py',31),
  ('statement -> return_statement SEMICOLON','statement',2,'p_statement','parser.py',32),
  ('statement -> print_statement SEMICOLON','statement',2,'p_statement','parser.py',33),
  ('statement -> input_statement SEMICOLON','statement',2,'p_statement','parser.py',34),
  ('statement -> block','statement',1,'p_statement','parser.py',35),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',39),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',40),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser.py',41),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser.py',42),
  ('expression -> expression MODULO expression','expression',3,'p_expression','parser.py',43),
  ('expression -> expression EQ expression','expression',3,'p_expression','parser.py',44),
  ('expression -> expression NEQ expression','expression',3,'p_expression','parser.py',45),
  ('expression -> expression LT expression','expression',3,'p_expression','parser.py',46),
  ('expression -> expression LE expression','expression',3,'p_expression','parser.py',47),
  ('expression -> expression GT expression','expression',3,'p_expression','parser.py',48),
  ('expression -> expression GE expression','expression',3,'p_expression','parser.py',49),
  ('expression -> expression AND expression','expression',3,'p_expression','parser.py',50),
  ('expression -> expression OR expression','expression',3,'p_expression','parser.py',51),
  ('expression -> NOT expression','expression',2,'p_expression','parser.py',52),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','parser.py',53),
  ('expression -> value','expression',1,'p_expression','parser.py',54),
  ('conditional -> IF LPAREN expression RPAREN statement','conditional',5,'p_conditional','parser.py',67),
  ('conditional -> IF LPAREN expression RPAREN statement ELSE statement','conditional',7,'p_conditional','parser.py',68),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','parser.py',76),
  ('return_statement -> RETURN','return_statement',1,'p_return_statement','parser.py',77),
  ('print_statement -> PRINT LPAREN expression RPAREN','print_statement',4,'p_print_statement','parser.py',84),
  ('input_statement -> INPUT LPAREN STRING RPAREN','input_statement',4,'p_input_statement','parser.py',88),
  ('input_statement -> INPUT LPAREN RPAREN','input_statement',3,'p_input_statement','parser.py',89),
  ('while_statement -> WHILE LPAREN expression RPAREN statement','while_statement',5,'p_while_statement','parser.py',96),
  ('value -> NUMBER','value',1,'p_value','parser.py',100),
  ('value -> STRING','value',1,'p_value','parser.py',101),
  ('value -> ID','value',1,'p_value','parser.py',102),
  ('value -> boolean','value',1,'p_value','parser.py',103),
  ('value -> function_call','value',1,'p_value','parser.py',104),
  ('boolean -> TRUE','boolean',1,'p_boolean','parser.py',108),
  ('boolean -> FALSE','boolean',1,'p_boolean','parser.py',109),
  ('arg_list -> arg_list COMMA expression','arg_list',3,'p_arg_list','parser.py',113),
  ('arg_list -> expression','arg_list',1,'p_arg_list','parser.py',114),
  ('arg_list -> empty','arg_list',1,'p_arg_list','parser.py',115),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',122),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_assignment','parser.py',126),
  ('loop -> WHILE LPAREN expression RPAREN statement','loop',5,'p_loop','parser.py',130),
  ('loop -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN statement','loop',9,'p_loop','parser.py',131),
  ('function_declaration -> FUNCTION ID LPAREN params RPAREN block','function_declaration',6,'p_function_declaration','parser.py',138),
  ('params -> param_list','params',1,'p_params','parser.py',142),
  ('params -> empty','params',1,'p_params','parser.py',143),
  ('param_list -> param_list COMMA ID','param_list',3,'p_param_list','parser.py',147),
  ('param_list -> ID','param_list',1,'p_param_list','parser.py',148),
  ('function_call -> ID LPAREN arg_list RPAREN','function_call',4,'p_function_call','parser.py',155),
  ('block -> LBRACE statements RBRACE','block',3,'p_block','parser.py',159),
]
